Things to update
1. (done) update {CLASS_GRADE_REPORT}
   - comment the extra stuff
   - rename *.log

1. rename cat-nocomment to cat-nocomments
1. document and unify the naming of
  release_date&
  due_date
  time_limit
  grace_period

1. rname functions to indicate which are internal  
   - _name
   - name_i
   - function name {   # Internal

8. Test 
  Maybe the grade process is to
     - checkout the version
     - branch the version
     - commit the files
     - then merge the files

==
what if, 
   when you clone, you create a directory that is empty if the user did not except
     - you can still clone later
     - but you can leave a grade-report that status
       -- the user did not accept the assignment 
     - later, this will validate that stuff worked correctly.
       If current-date > due_date then
          - echo current-date > clone_date
          - grade-report
              -- did not accept

1. maybe add the notition that the assignment was
   for code, paper or both


1. move away from a .env file -- see makefile above



5 Drive from makefile


7. spilt ??
     - grade_submissions: grading  -- served well if adding/commit was separt in case of multiple grading or fixing stuff
     - commit_grading:  : adding grade.report, answers.md, etc.
     - publish_grade: publishing:  i.e, publishing is just pushing?




Log file
  - have two types of loging
  1. summary doing a collective operatin
       log_group "-----"
       log_group "doing whateve"
  1. individual item for a individual student
     log_item \t, "student", "date", "message"
     
Check on the case of
    a Makefiel present but for paper work 

If comments are made for the grade report
   as opposed to putting them on the end of the line, make a new line.
   

Need a way to grade a section at a time for due date, etc.


grade.bash

-- makefile for Java and MIPS
-- cleanup

-- ability to have multiple assignments per repo
   -- grade_start  (default) 
   -- grade_start <name>
      * grade_report.<name>
      * due.date.<name>
      * grades.42-string-mips.<name>


-- need override to have fixed by Prof.
   -- if you checkout main, verses commit number
-- make grading branch..
   -- merge at end.

make error message relative
-- need better way to provide prompting of rubric.grading


Testing hook for programming
  -- must compile
  -- must have intial files that are for the deliverables

pregrade..  
  -- need a way to flag no submission.md
  -- need a way to flag practically assignment == submission.md
     -- practically 
         -- only some many updates?
         -- <!-- >   < less than some many updates as a percentage?
         
  -- need a way to have zero commits

function create_grading_dir () {
function create_assignment () {
function grade_start () {
function regrade_submission () {
function grade_submission () {
function grade_submissions () {
function reset_grading () {
function clone_submission () {
function clone_submissions () {
function pull_submission () {
function pull_submissions () {
function publish_grade () {
function publish_grades () {
function grade_join () {
function grades2csv () {
function all_grades2csv () {
function checkout_date () {
function checkout_due_date () {
function apply_all () {


# Primary Grading Related Functions
  function reset_grading () {
  function grade_start () {
  function clone_submissions () {
  function pull_submissions () {
  function grade_submissions () {
  function publish_grades () {
  function apply_all () {

# Individual and Specialize Grading Related Fuctions
  function clone_submission () {
  function pull_submission () {

  function regrade_submission () {
  function grade_submission () {
  function publish_grade () {

  function checkout_date () {
  function checkout_due_date () {



# Setup Relarted Functions
  create_grading_dir  : used once per class
  create_assignment   : used once per assignment


# Grading Report Related Functions
  function grade_join () {
  function grades2csv () {
  function all_grades2csv () {


